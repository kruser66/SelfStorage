# Generated by Django 4.2 on 2023-04-20 10:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(blank=True, db_index=True, max_length=128, region=None, verbose_name='телефон')),
                ('avatar', models.ImageField(blank=True, upload_to='', verbose_name='аватарка')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Box',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Этаж')),
                ('volume', models.PositiveIntegerField(verbose_name='объем')),
                ('dimension', models.CharField(default='1 x 1 x 1', max_length=20, verbose_name='Ш х В х Г')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='цена')),
                ('image', models.ImageField(blank=True, upload_to='images', verbose_name='Изображение боксов')),
            ],
            options={
                'verbose_name': 'бокс',
                'verbose_name_plural': 'боксы',
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('address', models.CharField(max_length=200, verbose_name='Адрес склада')),
                ('image', models.ImageField(blank=True, upload_to='images', verbose_name='Внешний вид склада')),
                ('roof_heght', models.DecimalField(decimal_places=1, max_digits=4, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Высота потолков')),
                ('temperature', models.IntegerField(blank=True, null=True, verbose_name='Температура на складе')),
                ('benefit', models.CharField(blank=True, max_length=50, verbose_name='Преимущество')),
                ('contact', models.CharField(max_length=250, verbose_name='Контакты')),
                ('description', models.CharField(max_length=250, verbose_name='Описание')),
                ('location', models.CharField(max_length=250, verbose_name='Схема проезда')),
            ],
            options={
                'verbose_name': 'склад',
                'verbose_name_plural': 'склады',
            },
        ),
        migrations.CreateModel(
            name='Rental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий к заказу')),
                ('started_at', models.DateField(auto_now_add=True, db_index=True, verbose_name='начало аренды')),
                ('expired_at', models.DateField(blank=True, db_index=True, null=True, verbose_name='конец аренды')),
                ('paid', models.BooleanField(default=False, verbose_name='Оплачен')),
                ('box', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rents', to='storage.box', verbose_name='аренда')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rents', to=settings.AUTH_USER_MODEL, verbose_name='аренда')),
            ],
            options={
                'verbose_name': 'договор аренды',
                'verbose_name_plural': 'договора аренды',
                'ordering': ['-expired_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('NEW', 'Новый'), ('PAID', 'Оплачен'), ('CANCELED', 'Отменен')], default='NEW', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='box',
            name='storage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boxes', to='storage.storage', verbose_name='боксы'),
        ),
    ]
